# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Ship(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, name: str=None, type: str=None, registration_number: str=None, purchase_date: date=None, fuel_capacity: int=None):  # noqa: E501
        """Ship - a model defined in Swagger

        :param id: The id of this Ship.  # noqa: E501
        :type id: int
        :param name: The name of this Ship.  # noqa: E501
        :type name: str
        :param type: The type of this Ship.  # noqa: E501
        :type type: str
        :param registration_number: The registration_number of this Ship.  # noqa: E501
        :type registration_number: str
        :param purchase_date: The purchase_date of this Ship.  # noqa: E501
        :type purchase_date: date
        :param fuel_capacity: The fuel_capacity of this Ship.  # noqa: E501
        :type fuel_capacity: int
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'type': str,
            'registration_number': str,
            'purchase_date': date,
            'fuel_capacity': int
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'type': 'type',
            'registration_number': 'registrationNumber',
            'purchase_date': 'purchaseDate',
            'fuel_capacity': 'fuelCapacity'
        }
        self._id = id
        self._name = name
        self._type = type
        self._registration_number = registration_number
        self._purchase_date = purchase_date
        self._fuel_capacity = fuel_capacity

    @classmethod
    def from_dict(cls, dikt) -> 'Ship':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ship of this Ship.  # noqa: E501
        :rtype: Ship
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Ship.


        :return: The id of this Ship.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Ship.


        :param id: The id of this Ship.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Ship.


        :return: The name of this Ship.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Ship.


        :param name: The name of this Ship.
        :type name: str
        """

        self._name = name

    @property
    def type(self) -> str:
        """Gets the type of this Ship.


        :return: The type of this Ship.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Ship.


        :param type: The type of this Ship.
        :type type: str
        """

        self._type = type

    @property
    def registration_number(self) -> str:
        """Gets the registration_number of this Ship.


        :return: The registration_number of this Ship.
        :rtype: str
        """
        return self._registration_number

    @registration_number.setter
    def registration_number(self, registration_number: str):
        """Sets the registration_number of this Ship.


        :param registration_number: The registration_number of this Ship.
        :type registration_number: str
        """

        self._registration_number = registration_number

    @property
    def purchase_date(self) -> date:
        """Gets the purchase_date of this Ship.


        :return: The purchase_date of this Ship.
        :rtype: date
        """
        return self._purchase_date

    @purchase_date.setter
    def purchase_date(self, purchase_date: date):
        """Sets the purchase_date of this Ship.


        :param purchase_date: The purchase_date of this Ship.
        :type purchase_date: date
        """

        self._purchase_date = purchase_date

    @property
    def fuel_capacity(self) -> int:
        """Gets the fuel_capacity of this Ship.


        :return: The fuel_capacity of this Ship.
        :rtype: int
        """
        return self._fuel_capacity

    @fuel_capacity.setter
    def fuel_capacity(self, fuel_capacity: int):
        """Sets the fuel_capacity of this Ship.


        :param fuel_capacity: The fuel_capacity of this Ship.
        :type fuel_capacity: int
        """

        self._fuel_capacity = fuel_capacity
